[{"/Users/bogdan/Desktop/projects/chat/chat-client/src/index.js":"1","/Users/bogdan/Desktop/projects/chat/chat-client/src/App.js":"2","/Users/bogdan/Desktop/projects/chat/chat-client/src/store/reducers/index.js":"3","/Users/bogdan/Desktop/projects/chat/chat-client/src/pages/auth/Auth.js":"4","/Users/bogdan/Desktop/projects/chat/chat-client/src/components/auth/Register/Register.js":"5","/Users/bogdan/Desktop/projects/chat/chat-client/src/components/usedComponents/Button/Button.js":"6","/Users/bogdan/Desktop/projects/chat/chat-client/src/components/usedComponents/Input/Input.js":"7","/Users/bogdan/Desktop/projects/chat/chat-client/src/store/actions/types.js":"8","/Users/bogdan/Desktop/projects/chat/chat-client/src/components/auth/Login/Login.js":"9","/Users/bogdan/Desktop/projects/chat/chat-client/src/utils/utils.js":"10","/Users/bogdan/Desktop/projects/chat/chat-client/src/store/actions/auth.js":"11","/Users/bogdan/Desktop/projects/chat/chat-client/src/store/actions/alert.js":"12","/Users/bogdan/Desktop/projects/chat/chat-client/src/store/store.js":"13","/Users/bogdan/Desktop/projects/chat/chat-client/src/store/reducers/alert.js":"14","/Users/bogdan/Desktop/projects/chat/chat-client/src/store/reducers/auth.js":"15","/Users/bogdan/Desktop/projects/chat/chat-client/src/store/reducers/loader.js":"16","/Users/bogdan/Desktop/projects/chat/chat-client/src/store/actions/loader.js":"17","/Users/bogdan/Desktop/projects/chat/chat-client/src/components/usedComponents/Loader/Loader.js":"18","/Users/bogdan/Desktop/projects/chat/chat-client/src/pages/chat/Chat.js":"19","/Users/bogdan/Desktop/projects/chat/chat-client/src/components/usedComponents/Modal/Modal.js":"20","/Users/bogdan/Desktop/projects/chat/chat-client/src/components/usedComponents/Alert/Alert.js":"21","/Users/bogdan/Desktop/projects/chat/chat-client/src/components/usedComponents/ChatMenu/ChatMenu.js":"22","/Users/bogdan/Desktop/projects/chat/chat-client/src/components/usedComponents/ArrowUp/ArrowUp.js":"23","/Users/bogdan/Desktop/projects/chat/chat-client/src/components/chatComponents/Rooms/Rooms.js":"24","/Users/bogdan/Desktop/projects/chat/chat-client/src/store/actions/chat.js":"25","/Users/bogdan/Desktop/projects/chat/chat-client/src/store/reducers/chat.js":"26","/Users/bogdan/Desktop/projects/chat/chat-client/src/components/usedComponents/RoomManipulation/RoomModal.js":"27","/Users/bogdan/Desktop/projects/chat/chat-client/src/components/chatComponents/chosenRoom/ChosenRoom.js":"28","/Users/bogdan/Desktop/projects/chat/chat-client/src/components/chatComponents/chosenRoom/chosenRoomDecoration/ChosenRoomDecoration.js":"29","/Users/bogdan/Desktop/projects/chat/chat-client/src/components/usedComponents/decorations/Decoration.js":"30","/Users/bogdan/Desktop/projects/chat/chat-client/src/components/chatComponents/chosenRoom/ChosenRoomDecoration/ChosenRoomDecoration.js":"31","/Users/bogdan/Desktop/projects/chat/chat-client/src/components/chatComponents/chosenRoom/ChosenRoomHeader/RoomHeader.js":"32","/Users/bogdan/Desktop/projects/chat/chat-client/src/components/chatComponents/chosenRoom/Room/Room.js":"33","/Users/bogdan/Desktop/projects/chat/chat-client/src/components/chatComponents/chosenRoom/Messages/Messages.js":"34"},{"size":310,"mtime":1612472780026,"results":"35","hashOfConfig":"36"},{"size":816,"mtime":1613679671363,"results":"37","hashOfConfig":"36"},{"size":357,"mtime":1612974307126,"results":"38","hashOfConfig":"36"},{"size":1487,"mtime":1613137310353,"results":"39","hashOfConfig":"36"},{"size":1466,"mtime":1613229321809,"results":"40","hashOfConfig":"36"},{"size":207,"mtime":1612463015533,"results":"41","hashOfConfig":"36"},{"size":309,"mtime":1613118865141,"results":"42","hashOfConfig":"36"},{"size":1041,"mtime":1613835514561,"results":"43","hashOfConfig":"36"},{"size":1417,"mtime":1613227755599,"results":"44","hashOfConfig":"36"},{"size":320,"mtime":1613832923401,"results":"45","hashOfConfig":"36"},{"size":3483,"mtime":1613992521422,"results":"46","hashOfConfig":"36"},{"size":456,"mtime":1612201081810,"results":"47","hashOfConfig":"36"},{"size":373,"mtime":1612348484427,"results":"48","hashOfConfig":"36"},{"size":485,"mtime":1612514271874,"results":"49","hashOfConfig":"36"},{"size":1597,"mtime":1613836200784,"results":"50","hashOfConfig":"36"},{"size":422,"mtime":1612371455301,"results":"51","hashOfConfig":"36"},{"size":227,"mtime":1612372112708,"results":"52","hashOfConfig":"36"},{"size":433,"mtime":1612375238144,"results":"53","hashOfConfig":"36"},{"size":1156,"mtime":1613232137295,"results":"54","hashOfConfig":"36"},{"size":2940,"mtime":1613227523170,"results":"55","hashOfConfig":"36"},{"size":1219,"mtime":1613229286700,"results":"56","hashOfConfig":"36"},{"size":2163,"mtime":1613992506204,"results":"57","hashOfConfig":"36"},{"size":893,"mtime":1613832708535,"results":"58","hashOfConfig":"36"},{"size":2214,"mtime":1613894804618,"results":"59","hashOfConfig":"36"},{"size":2450,"mtime":1613846232362,"results":"60","hashOfConfig":"36"},{"size":1196,"mtime":1613442926528,"results":"61","hashOfConfig":"36"},{"size":5279,"mtime":1613230746341,"results":"62","hashOfConfig":"36"},{"size":559,"mtime":1613233521903,"results":"63","hashOfConfig":"36"},{"size":2268,"mtime":1613137668194,"results":"64","hashOfConfig":"36"},{"size":1564,"mtime":1612731400784,"results":"65","hashOfConfig":"36"},{"size":2164,"mtime":1613992052843,"results":"66","hashOfConfig":"36"},{"size":1089,"mtime":1613986103832,"results":"67","hashOfConfig":"36"},{"size":2671,"mtime":1613922172025,"results":"68","hashOfConfig":"36"},{"size":2115,"mtime":1613832963493,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"zmzf6b",{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"72"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"72"},"/Users/bogdan/Desktop/projects/chat/chat-client/src/index.js",[],["149","150"],"/Users/bogdan/Desktop/projects/chat/chat-client/src/App.js",["151"],"import React from 'react'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport { connect } from 'react-redux'\n\n\nimport Auth from './pages/auth/Auth'\nimport Chat from './pages/chat/Chat'\nimport Alert from './components/usedComponents/Alert/Alert'\nimport Loader from './components/usedComponents/Loader/Loader'\nimport Rooms from \"./components/chatComponents/Rooms/Rooms\";\n\nconst App = ({loading}) => {\n  return (\n    loading\n    ? \n      <Loader />\n    :\n    <>\n      <Alert />\n     \t<Router>\n        <Switch>\n            <Route path={'/auth'} component={Auth}/>\n            <Route exact path={'/'} component={Chat}/>\n        </Switch>\n      </Router>\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n\tloading: state.loading.loading\t\n})\n\nexport default connect(mapStateToProps, null)(App)","/Users/bogdan/Desktop/projects/chat/chat-client/src/store/reducers/index.js",[],"/Users/bogdan/Desktop/projects/chat/chat-client/src/pages/auth/Auth.js",[],"/Users/bogdan/Desktop/projects/chat/chat-client/src/components/auth/Register/Register.js",[],"/Users/bogdan/Desktop/projects/chat/chat-client/src/components/usedComponents/Button/Button.js",[],"/Users/bogdan/Desktop/projects/chat/chat-client/src/components/usedComponents/Input/Input.js",[],"/Users/bogdan/Desktop/projects/chat/chat-client/src/store/actions/types.js",[],"/Users/bogdan/Desktop/projects/chat/chat-client/src/components/auth/Login/Login.js",["152"],"import React, {useState, useEffect } from 'react'\nimport styles from '../Register/Register.module.scss'\n\n//Additional \nimport Button from '../../usedComponents/Button/Button'\nimport Input from '../../usedComponents/Input/Input'\n\n//Redux\nimport { connect } from 'react-redux'\nimport {login} from '../../../store/actions/auth'\nimport {setLoading} from \"../../../store/actions/loader\";\n\n//Router\nimport {useHistory} from 'react-router-dom'\n\nexport const Login = ({login, isLogged}) => {\n\tconst history = useHistory()\n\n\tconst [data, setData] = useState({\n\t\temail: '',\n\t\tpassword: '',\n\t})\n\n\tconst inputHandler = (e) => {\n\t\te.preventDefault()\n\t\tconst value = e.target.value\n\t\tsetData({\n\t\t\t...data,\n\t\t\t[e.target.name]: value\n\t\t})\n\t}\n\n\tuseEffect(() => {\n\t\tif (isLogged !== undefined && isLogged === true) {\n\t\t\thistory.push('/')\n\t\t}\n\t}, [isLogged])\n\n\n\treturn (\n\t\t<>\n\t\t\t<form className={styles.form}>\n\t\t\t\t<Input value={data.email} name={'email'} onChange={inputHandler} type={'email'} placeholder={'Your E-Mail adress'}/>\n\t\t\t\t<Input value={data.password} name={'password'} onChange={inputHandler} type={'password'} placeholder={'Password'}/>\n\t\t\t\t<div style={{marginTop: '1rem'}} onClick={() => login(data.email, data.password)}><Button data={'Sign in'}/></div>\n\t\t\t</form>\n\t\t</>\n\t)\n}\n\n\n\nconst mapStateToProps = (state) => ({\n\tisLogged: state.auth.isLogged\n})\n\nexport default connect(mapStateToProps, {login, setLoading})(Login)\n","/Users/bogdan/Desktop/projects/chat/chat-client/src/utils/utils.js",[],"/Users/bogdan/Desktop/projects/chat/chat-client/src/store/actions/auth.js",[],"/Users/bogdan/Desktop/projects/chat/chat-client/src/store/actions/alert.js",[],"/Users/bogdan/Desktop/projects/chat/chat-client/src/store/store.js",[],"/Users/bogdan/Desktop/projects/chat/chat-client/src/store/reducers/alert.js",["153"],"import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\n\nconst initialState = []\n\nconst alertReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== payload)\n    case REMOVE_ALERT:\n    \treturn {\n    \t\t...state,\n    \t\tclose_alert:true,\n    \t}\n    default:\n      return state;\n  }\n}\n\nexport default alertReducer","/Users/bogdan/Desktop/projects/chat/chat-client/src/store/reducers/auth.js",[],"/Users/bogdan/Desktop/projects/chat/chat-client/src/store/reducers/loader.js",[],"/Users/bogdan/Desktop/projects/chat/chat-client/src/store/actions/loader.js",[],"/Users/bogdan/Desktop/projects/chat/chat-client/src/components/usedComponents/Loader/Loader.js",[],"/Users/bogdan/Desktop/projects/chat/chat-client/src/pages/chat/Chat.js",["154"],"import React, { useEffect } from 'react'\nimport styles from './Chat.module.scss'\nimport { useHistory } from 'react-router-dom'\n\nimport { connect } from 'react-redux'\nimport { checkLogged } from '../../store/actions/auth'\n\nimport ChatMenu from '../../components/usedComponents/ChatMenu/ChatMenu'\nimport RoomModal from \"../../components/usedComponents/RoomManipulation/RoomModal\";\nimport ChosenRoom from \"../../components/chatComponents/chosenRoom/ChosenRoom\";\n\n\nexport const Chat = ({ checkLogged, isLogged, open_modal }) => {\n\tconst history = useHistory()\n\n\tconst changePage = () => {\n\t\thistory.push('/auth')\n\t}\n\n\tuseEffect(() => {\n\t\tisLogged === undefined && checkLogged()\n\t}, [isLogged])\n\n    return (\n    \t<>\n    \t{\n\n    \t\tisLogged === true || undefined?\n\t    \t\t<div>\n\t\t\t\t\t{open_modal && <RoomModal />}\n\t\t\t\t\t<div className={styles.chatBox}>\n\t\t\t\t\t\t<ChatMenu />\n\t\t\t\t\t\t<ChosenRoom />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t        \t: isLogged === false && changePage() \n    \t}\n        </>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n\tisLogged: state.auth.isLogged,\n\topen_modal: state.chat.open_modal,\n})\n\nexport default connect(mapStateToProps, {checkLogged})(Chat)\n\n","/Users/bogdan/Desktop/projects/chat/chat-client/src/components/usedComponents/Modal/Modal.js",["155"],"import React, { useState, useEffect } from 'react'\nimport styles from './Modal.module.scss'\n\nimport Button from '../Button/Button'\nimport { connect } from 'react-redux';\n\nimport {Link} from 'react-router-dom'\n\nimport {emailVerification, closeVerificationModal} from '../../../store/actions/auth'\n\nconst Modal = ({emailVerification, closeVerificationModal, user_verified, user}) => {\n\tconst [codeInput, setCodeInput] = useState('') \n\tconst [stageOne, setStage] = useState(true)\n\n\tconst classname = `${styles.modalDot} ${styles.modalDotActive}` \n\n\tuseEffect(() => {\n\t\tif (user_verified) setStage(false)\n\t}, [])\n\n\n\treturn (\n\t\t<>\n\t\t\t<div className={styles.fullPage}></div>\t\n\t\t\t<div className={styles.modalWindow} style={{height: !stageOne && '300px'}}>\n\t\t\t\t{\n\t\t\t\t\tstageOne\n\t\t\t\t\t?\n\t\t\t\t\t<>\n\t\t\t\t\t<div className={styles.modalImage}></div>\n\t\t\t\t\t\t<div className={styles.modalText}>\n\t\t\t\t\t\t\t<div className={styles.modalHeader}>Verification code was sent to your email.</div>\n\t\t\t\t\t\t\t<div className={styles.modalTitle}>Please, paste it down here to prove that you're not a robot.</div>\n\t\t\t\t\t\t\t<input value={codeInput.code} name={codeInput.code} placeholder=\"CODE\" onChange={(e) => setCodeInput(e.target.value)} className={styles.modalInput}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t\t:\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div className={`${styles.modalImage} ${styles.modalEmoji}`}></div>\n\t\t\t\t\t\t<div className={styles.modalText}>\n\t\t\t\t\t\t\t<div className={styles.modalHeader} style={{fontSize:'30px'}}>Congratulations, {user.name}!</div>\n\t\t\t\t\t\t\t<div className={styles.modalTitle} style={{fontSize:'20px'}}>You've successfully created an account.</div>                                                                                           \t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t\t<div className={styles.modalStaticContent}>\n\t\t\t\t\t<div style={{marginRight: stageOne? '' : '7rem', display:'flex', flexDirection: 'row'}}>\n\t\t\t\t\t\t<div className={stageOne? classname : styles.modalDot} style={{marginRight: '1.5rem'}}></div>\n\t\t\t\t\t\t<div className={!stageOne? classname : styles.modalDot}></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{stageOne && \n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className={styles.modalButton} onClick={() => closeVerificationModal()}><Button style={{backgroundColor: 'grey', marginRight: '1rem', width:'7rem', fontSize: '20px', height: '2.7rem', paddingTop:\"8px\"}} data={'Close'}/></div>\n\t\t\t\t\t\t\t<div className={styles.modalButton} onClick={() => emailVerification(codeInput)}><Button style={{width:'7rem', fontSize: '20px', height: '2.7rem', paddingTop:\"8px\"}} data={'Submit'}/></div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t\t{!stageOne && <Link to={'/'} className={styles.modalButton}><Button style={{width:'7rem', fontSize: '20px', height: '2.7rem', paddingTop:\"8px\"}} data={'Start'}/></Link>}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\n\nconst mapStateToProps = (state) => ({\n\tuser_verified: state.auth.user_verified,\n\tuser: state.auth.user\n})\n\nexport default connect(mapStateToProps, {emailVerification, closeVerificationModal})(Modal)","/Users/bogdan/Desktop/projects/chat/chat-client/src/components/usedComponents/Alert/Alert.js",["156"],"import React, {useEffect} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Icon } from '@iconify/react';\nimport closeSharp from '@iconify-icons/ion/close-sharp';\nimport { removeAlert } from \"../../../store/actions/alert\";\nimport styles from \"./Alert.module.scss\";\n\n\nconst Alert = ({ alerts, removeAlert }) => {\n\n  return (\n    <>\n      {alerts !== null && alerts.length > 0 && alerts.length <= 1 ? (\n        <div\n          key={alerts[0].id}\n          className={`${styles.alert} ${\n            alerts[0].alertType === \"error\"\n              ? `${styles.alertError}`\n              : alerts[0].alertType === \"success\" && `${styles.alertSuccess}`\n          }`}\n        >\n          <Icon\n            className={styles.closeIcon}\n            icon={closeSharp}\n            onClick={() => removeAlert(alerts[0].id)}\n          />\n          {alerts[0].msg}\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired,\n  removeAlert: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  alerts: state.alert,\n  close_alert: state.alert.close_alert\n});\n\nexport default connect(mapStateToProps, { removeAlert })(Alert);\n","/Users/bogdan/Desktop/projects/chat/chat-client/src/components/usedComponents/ChatMenu/ChatMenu.js",[],"/Users/bogdan/Desktop/projects/chat/chat-client/src/components/usedComponents/ArrowUp/ArrowUp.js",[],"/Users/bogdan/Desktop/projects/chat/chat-client/src/components/chatComponents/Rooms/Rooms.js",["157"],"import React, {useState, useEffect} from 'react'\nimport styles from './Rooms.module.scss'\nimport {connect} from \"react-redux\";\nimport {chosenRoom} from \"../../../store/actions/chat\";\nimport {getTime} from \"../../../utils/utils\";\n\n\nconst Rooms = ({user, chosenRoom}) => {\n    const [chosen, setChosen] = useState(undefined)\n\n\n    return (\n        <>\n            {\n                user.rooms.slice(0).reverse().map((room, idx) => {\n                    let message;\n                    const lastMessage = user.lastMessages[room.name].lastMessage;\n                    if (lastMessage !== undefined) {\n                        message = lastMessage.message.length >= 35 ? lastMessage.message.substring(0, 35).trimEnd() + \"...\" : lastMessage.message;\n                    }\n\n                    return (\n                        <div\n                            className={styles.menuRoom}\n                            onClick={() => {\n                                setChosen(idx)\n                                chosenRoom(room)\n                            }}\n                            key={idx}\n                            style={{backgroundColor: chosen === idx && '#fc8621', border: '0'}}\n                        >\n                            <div className={styles.timeBox}>\n                                <div className={styles.time}>{lastMessage !== undefined && getTime(lastMessage.postedAt)}</div>\n                            </div>\n                            <div className={styles.roomName}>{room.name}</div>\n                            {\n                                lastMessage !== undefined\n                                    ?\n                                    <div className={styles.lastMessage}>\n                                        {message}\n                                    </div>\n                                    :\n                                    <div className={styles.lastMessage}>No messages in room yet.</div>\n                            }\n                        </div>\n                    )\n                })\n            }\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.auth.user\n})\nexport default connect(mapStateToProps, {chosenRoom})(Rooms)","/Users/bogdan/Desktop/projects/chat/chat-client/src/store/actions/chat.js",[],"/Users/bogdan/Desktop/projects/chat/chat-client/src/store/reducers/chat.js",[],"/Users/bogdan/Desktop/projects/chat/chat-client/src/components/usedComponents/RoomManipulation/RoomModal.js",["158"],"import React, {useState, useEffect} from 'react';\nimport styles from './RoomModal.module.scss';\nimport {connect} from \"react-redux\";\nimport {chatManager, close_modal} from \"../../../store/actions/chat\";\nimport Input from \"../Input/Input\";\nimport Button from \"../Button/Button\";\n\nconst RoomModal = ({typeModal, close_modal, chatManager}) => {\n    const [roomName, setRoomName] = useState('')\n    return (\n        <>\n            <div className={styles.modalBg} onClick={() => close_modal()}/>\n            <div className={styles.modalCenter}>\n            <div className={styles.modalRoom}>\n                {\n                    typeModal === \"JOIN_EXISTING_ROOM\" &&\n                        <div className={styles.modalContent}>\n                            <div className={`${styles.modalRoomImg} ${styles.modalRoomImgFirst}`}/>\n                            <div className={styles.modalRoomText}>\n                                <div className={styles.modalRoomHeader}>Join room!</div>\n                                <Input\n                                    name={\"roomName\"}\n                                    type={\"text\"}\n                                    placeholder={\"Paste name of the room\"}\n                                    value={roomName}\n                                    onChange={(e) => setRoomName(e.target.value)}\n                                />\n\n                                <div className={styles.modalRoomButton}>\n                                    <div onClick={() => close_modal()}><Button style={{backgroundColor: 'grey', marginRight: '1rem', width:'7rem', fontSize: '20px', height: '2.7rem', paddingTop:\"8px\"}} data={'Close'}/></div>\n                                    <div onClick={() => chatManager(roomName, 'joinRoom', 'join')}><Button style={{width:'7rem', fontSize: '20px', height: '2.7rem', paddingTop:\"8px\"}} data={\"Join!\"}/></div>\n                                </div>\n                            </div>\n                        </div>\n                }\n                {\n                    typeModal === \"CREATE_NEW_ROOM\" &&\n                        <div className={styles.modalContent}>\n                            <div className={`${styles.modalRoomImg} ${styles.modalRoomImgSecond}`}/>\n                            <div className={styles.modalRoomText}>\n                                <div className={styles.modalRoomHeader}>Create new room!</div>\n                                <Input\n                                    name={\"roomName\"}\n                                    type={\"text\"}\n                                    placeholder={\"Paste name of the room\"}\n                                    value={roomName}\n                                    onChange={(e) => setRoomName(e.target.value)}\n                                />\n\n                                <div className={styles.modalRoomButton} style={{bottom: \"-1rem\"}}>\n                                    <div onClick={() => close_modal()}><Button style={{backgroundColor: 'grey', marginRight: '1rem', width:'7rem', fontSize: '20px', height: '2.7rem', paddingTop:\"8px\"}} data={'Close'}/></div>\n                                    <div onClick={() => chatManager(roomName, 'createNewRoom', 'new')}><Button style={{width:'7rem', fontSize: '20px', height: '2.7rem', paddingTop:\"8px\"}} data={\"Create!\"}/></div>\n                                </div>\n                            </div>\n                        </div>\n                }\n                {\n                    typeModal === \"LEAVE_ROOM\" &&\n                        <div className={styles.modalContent} >\n                            <div className={`${styles.modalRoomImg} ${styles.modalRoomImgThird}`}/>\n                            <div className={styles.modalRoomText} style={{marginLeft: '-3rem'}}>\n                                <div className={`${styles.modalRoomHeader} ${styles.modalRoomHeaderLeave}`}>Are you sure to leave this room? If yes, paste the name of the room.</div>\n                                <Input\n                                    name={\"roomName\"}\n                                    type={\"text\"}\n                                    placeholder={\"Paste name of the room\"}\n                                    value={roomName}\n                                    onChange={(e) => setRoomName(e.target.value)}\n                                />\n\n                                <div className={`${styles.modalRoomButton} ${styles.modalRoomButtonLarge}`} style={{bottom: \"1rem\"}}>\n                                    <div onClick={() => close_modal()}><Button style={{backgroundColor: 'grey', marginRight: '1rem', width:'7rem', fontSize: '20px', height: '2.7rem', paddingTop:\"8px\"}} data={'Close'}/></div>\n                                    <div onClick={() => chatManager(roomName, 'leaveRoom', 'leave')}><Button style={{width:'7rem', fontSize: '20px', height: '2.7rem', paddingTop:\"8px\"}} data={\"Leave\"}/></div>\n                                </div>\n                            </div>\n                        </div>\n                }\n            </div>\n            </div>\n        </>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    typeModal: state.chat.typeModal,\n    user: state.chat.user\n});\n\nexport default connect(mapStateToProps, {close_modal,chatManager})(RoomModal)","/Users/bogdan/Desktop/projects/chat/chat-client/src/components/chatComponents/chosenRoom/ChosenRoom.js",[],"/Users/bogdan/Desktop/projects/chat/chat-client/src/components/chatComponents/chosenRoom/chosenRoomDecoration/ChosenRoomDecoration.js",[],"/Users/bogdan/Desktop/projects/chat/chat-client/src/components/usedComponents/decorations/Decoration.js",[],"/Users/bogdan/Desktop/projects/chat/chat-client/src/components/chatComponents/chosenRoom/ChosenRoomDecoration/ChosenRoomDecoration.js",[],"/Users/bogdan/Desktop/projects/chat/chat-client/src/components/chatComponents/chosenRoom/ChosenRoomHeader/RoomHeader.js",[],"/Users/bogdan/Desktop/projects/chat/chat-client/src/components/chatComponents/chosenRoom/Room/Room.js",["159","160"],"import React, {useEffect, useState} from 'react';\nimport styles from './Room.module.scss';\nimport io from \"socket.io-client\";\n\nimport RoomHeader from \"../ChosenRoomHeader/RoomHeader\";\nimport {setAlert} from \"../../../../store/actions/alert\";\nimport {loadMessages, newLastMessage} from \"../../../../store/actions/chat\";\nimport {connect} from 'react-redux';\nimport {Messages, OldMessages} from \"../Messages/Messages\";\n\nconst ENDPOINT = 'http://localhost:5555/';\nlet socket;\n\nconst Room = ({room, user, newLastMessage}) => {\n    const [message, setMessage] = useState('');\n    const [newMessages, setMessages] = useState([]);\n\n    useEffect(() => {\n        socket = io(ENDPOINT, { transports: ['websocket', 'polling', 'flashsocket'] });\n        socket.emit('join', ({user, room}), (err) => {\n            err && console.log('')\n        })\n        setMessages([])\n    }, [room.name]);\n\n    useEffect(() => {\n        socket.on('message', ({messageToSave, messagesToSend,saveRoom}) => {\n            if (messageToSave.to === room.name && room.name === saveRoom.name) {\n                setMessages(messagesToSend)\n                user.lastMessages[room.name] = {'lastMessage': messageToSave}\n                newLastMessage(user)\n            }\n        })\n    }, [newMessages, room.name]);\n\n    useEffect(() => {\n        return () => {\n            socket.emit('leaveRoom')\n        }\n    }, [room.name])\n\n    const sendMessage = (e) => {\n        e.preventDefault()\n        if (message) {\n            socket.emit('sendMessage', {message, user, room})\n            setMessage('')\n        }\n    };\n\n\n    return (\n        <div className={styles.Room}>\n            <RoomHeader room={room} />\n            <div className={styles.messages}>\n                <OldMessages roomMessages={room.messages} user={user}/>\n                <Messages newMessages={newMessages} user={user}/>\n            </div>\n            <div className={styles.RoomInputBox}>\n                <div className={styles.RoomInputBottom}>\n                    <div className={styles.sendMessage} onClick={(e) => sendMessage(e)}/>\n                    <input\n                        value={message}\n                        className={styles.RoomInput}\n                        onChange={(e) => setMessage(e.target.value)}\n                        placeholder={'Write a message...'}\n                        onKeyPress={e => e.key === 'Enter' && sendMessage(e)}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.auth.user,\n    room: state.chat.room\n})\n\nexport default connect(mapStateToProps, {setAlert, loadMessages, newLastMessage})(Room)","/Users/bogdan/Desktop/projects/chat/chat-client/src/components/chatComponents/chosenRoom/Messages/Messages.js",["161"],"import React, {useState, useEffect, useRef} from 'react';\nimport styles from './Messages.module.scss';\nimport {getTime} from \"../../../../utils/utils\";\n\n\nexport const Message = ({el, user}) => {\n    // false - him/her, true - me\n    const [sender, setSender] = useState(false)\n    const [time, setTime] = useState()\n    const messagesEnd = useRef()\n\n    useEffect(() => {\n        el.author.email === user.email ? setSender(true) : setSender(false)\n        scrollToBottom()\n        setTime(getTime(el.postedAt))\n    }, [el])\n\n    const scrollToBottom = () => {\n        messagesEnd.current.scrollIntoView({ behavior: 'smooth' })\n    }\n\n    return (\n        <>\n            <div className={styles.container}>\n                <div ref={messagesEnd} className={sender ? `${styles.messageYou} ${styles.message}` : `${styles.messageOpposite} ${styles.message}`}>\n                    <div className={styles.messageName}>{el.author.name}</div>\n                    <div className={styles.messageContent}>{el.message}</div>\n                    <div className={sender? styles.messageTimestampRight : styles.messageTimestampLeft}>{time}</div>\n                </div>\n            </div>\n        </>\n    )\n}\n\n\nexport const OldMessages = React.memo(({roomMessages, user}) => {\n    const [stateRoomMessages, setRoomMessages] = useState([]);\n\n    useEffect(() => {\n        setRoomMessages(roomMessages)\n    }, [roomMessages])\n\n    return (\n        <>\n            <div className={styles.container}>\n            {\n                stateRoomMessages.map((el, idx) => {\n                    return (\n                        <Message el={el} user={user} key={idx}/>\n                    )\n                })\n            }\n            </div>\n        </>\n    )\n})\n\n\n\nexport const Messages = ({newMessages, user}) => {\n    return (\n        <>\n            <div className={styles.container}>\n            {\n                 newMessages.map((el, idx) => {\n                     return (\n                         <Message el={el} user={user} key={idx}/>\n                     )\n                 })\n            }\n            </div>\n        </>\n    )\n}\n\n\n",{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":10,"column":8,"nodeType":"168","messageId":"169","endLine":10,"endColumn":13},{"ruleId":"170","severity":1,"message":"171","line":37,"column":5,"nodeType":"172","endLine":37,"endColumn":15,"suggestions":"173"},{"ruleId":"174","severity":1,"message":"175","line":13,"column":5,"nodeType":"176","messageId":"177","endLine":17,"endColumn":7},{"ruleId":"170","severity":1,"message":"178","line":22,"column":5,"nodeType":"172","endLine":22,"endColumn":15,"suggestions":"179"},{"ruleId":"170","severity":1,"message":"180","line":19,"column":5,"nodeType":"172","endLine":19,"endColumn":7,"suggestions":"181"},{"ruleId":"166","severity":1,"message":"182","line":1,"column":16,"nodeType":"168","messageId":"169","endLine":1,"endColumn":25},{"ruleId":"166","severity":1,"message":"182","line":1,"column":26,"nodeType":"168","messageId":"169","endLine":1,"endColumn":35},{"ruleId":"166","severity":1,"message":"182","line":1,"column":26,"nodeType":"168","messageId":"169","endLine":1,"endColumn":35},{"ruleId":"170","severity":1,"message":"183","line":24,"column":8,"nodeType":"172","endLine":24,"endColumn":19,"suggestions":"184"},{"ruleId":"170","severity":1,"message":"185","line":34,"column":8,"nodeType":"172","endLine":34,"endColumn":32,"suggestions":"186"},{"ruleId":"170","severity":1,"message":"187","line":16,"column":8,"nodeType":"172","endLine":16,"endColumn":12,"suggestions":"188"},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"no-unused-vars","'Rooms' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["191"],"no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","React Hook useEffect has a missing dependency: 'checkLogged'. Either include it or remove the dependency array. If 'checkLogged' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["192"],"React Hook useEffect has a missing dependency: 'user_verified'. Either include it or remove the dependency array.",["193"],"'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'room' and 'user'. Either include them or remove the dependency array.",["194"],"React Hook useEffect has missing dependencies: 'newLastMessage' and 'user'. Either include them or remove the dependency array. If 'newLastMessage' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["195"],"React Hook useEffect has a missing dependency: 'user.email'. Either include it or remove the dependency array.",["196"],"no-global-assign","no-unsafe-negation",{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},"Update the dependencies array to be: [history, isLogged]",{"range":"209","text":"210"},"Update the dependencies array to be: [checkLogged, isLogged]",{"range":"211","text":"212"},"Update the dependencies array to be: [user_verified]",{"range":"213","text":"214"},"Update the dependencies array to be: [room, room.name, user]",{"range":"215","text":"216"},"Update the dependencies array to be: [newLastMessage, newMessages, room.name, user]",{"range":"217","text":"218"},"Update the dependencies array to be: [el, user.email]",{"range":"219","text":"220"},[828,838],"[history, isLogged]",[678,688],"[checkLogged, isLogged]",[605,607],"[user_verified]",[866,877],"[room, room.name, user]",[1252,1276],"[newLastMessage, newMessages, room.name, user]",[518,522],"[el, user.email]"]